{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/mock-songs.ts","webpack:///./src/app/song-detail/song-detail.component.css","webpack:///./src/app/song-detail/song-detail.component.html","webpack:///./src/app/song-detail/song-detail.component.ts","webpack:///./src/app/song.ts","webpack:///./src/app/songs/songs.component.css","webpack:///./src/app/songs/songs.component.html","webpack:///./src/app/songs/songs.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { SongsComponent } from './songs/songs.component';\n\nconst routes: Routes = [\n  { path: ':lang/songs', component: SongsComponent }\n];\n\n@NgModule({\n  imports: [ RouterModule.forRoot(routes) ],\n  exports: [ RouterModule ]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\"","module.exports = \"<h1>{{title}}</h1>\\n<router-outlet></router-outlet>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms'; \n\nimport { AppComponent } from './app.component';\nimport { SongsComponent } from './songs/songs.component';\nimport { SongDetailComponent } from './song-detail/song-detail.component';\nimport { AppRoutingModule } from './/app-routing.module';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    SongsComponent,\n    SongDetailComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    AppRoutingModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Song } from './song';\n\nexport const SONGS: Song[] = [\n\t{id: 12, name: 'Yellow ledbetter'},\n\t{id: 146, name: 'Blackbird'}\n];","module.exports = \"\"","module.exports = \"<div *ngIf=\\\"song\\\">\\n  <h2>{{ song.name | uppercase }} Details</h2>\\n  <div><span>id: </span>{{song.id}}</div>\\n  <div>\\n    <label>name:\\n      <input [(ngModel)]=\\\"song.name\\\" placeholder=\\\"name\\\">\\n    </label>\\n  </div>\\n</div>\"","import { Component, OnInit, Input } from '@angular/core';\nimport { Song } from '../song';\n\n@Component({\n  selector: 'app-song-detail',\n  templateUrl: './song-detail.component.html',\n  styleUrls: ['./song-detail.component.css']\n})\nexport class SongDetailComponent implements OnInit {\n\n  @Input() song: Song;\n  \n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","export class Song {\n  id: number;\n  name: string;\n}","module.exports = \"\"","module.exports = \"<h2>Canzoni</h2>\\n<ul class=\\\"songs\\\">\\n  <li *ngFor=\\\"let song of songs\\\" (click)=\\\"onSelect(song)\\\" [class.selected]=\\\"hero === selectedHero\\\">\\n    <span class=\\\"badge\\\">{{song.id}}</span> {{song.name}}\\n  </li>\\n</ul>\\n<app-song-detail [song]=\\\"selectedSong\\\"></app-song-detail>\"","import { Component, OnInit } from '@angular/core';\nimport { Song } from '../song';\nimport { SONGS } from '../mock-songs';\n// import { app } from '../namespace';\n\n@Component({\n  selector: 'app-songs',\n  templateUrl: './songs.component.html',\n  styleUrls: ['./songs.component.css']\n})\nexport class SongsComponent implements OnInit {\n\n  \tsongs = SONGS;\n\n  \tselectedSong: Song;\n\n  \tconstructor() { \n  \t}\n\n  \tngOnInit() {\n  \t\t//console.log(SONGS);\n  \t\t// this.songs = SONGS;\n  \t\t// console.log(app.userIsAuthenticated);\n      // console.log(jQuery);\n  \t}\n\n  \tonSelect(song: Song): void {\n  \t\tthis.selectedSong = song;\n\t}\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nimport * as jquery from 'jquery';\nwindow['jQuery'] = window['$'] = jquery;\n\nimport * as popper from 'popper.js';\nwindow['Popper'] = popper;\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));"],"sourceRoot":""}