{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/artist-detail/artist-detail.component.html","webpack:///./src/app/artist-detail/artist-detail.component.scss","webpack:///./src/app/artist-detail/artist-detail.component.ts","webpack:///./src/app/artist.service.ts","webpack:///./src/app/artist.ts","webpack:///./src/app/artists/artists.component.html","webpack:///./src/app/artists/artists.component.scss","webpack:///./src/app/artists/artists.component.ts","webpack:///./src/app/config.service.ts","webpack:///./src/app/config.ts","webpack:///./src/app/entity.service.ts","webpack:///./src/app/entity.ts","webpack:///./src/app/localization.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { ArtistsComponent } from './artists/artists.component';\r\n// import { ArtistsComponent } from './artists/artists.component';\r\n\r\nconst routes: Routes = [\r\n  { path: 'artists', component: ArtistsComponent }\r\n  // { path: ':lang/artists', component: ArtistsComponent }\r\n  // , { path: ':lang/artists', component: ArtistsComponent }\r\n  // , { path: '**', component: PageNotFoundComponent }\r\n];\r\n\r\n@NgModule({\r\n  imports: [ RouterModule.forRoot(routes) ],\r\n  exports: [ RouterModule ]\r\n})\r\nexport class AppRoutingModule { }\r\n","module.exports = \"<div class=\\\"container\\\">\\r\\n<router-outlet></router-outlet>\\r\\n</div>\"","module.exports = \"\"","import { Component } from '@angular/core';\r\nimport { ConfigService } from './config.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n\r\n    constructor(private configService: ConfigService) {}\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms'; \r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { ArtistsComponent } from './artists/artists.component';\r\nimport { AppRoutingModule } from './app-routing.module';\nimport { ArtistDetailComponent } from './artist-detail/artist-detail.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    ArtistsComponent,\r\n    ArtistDetailComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    FormsModule,\r\n    AppRoutingModule,\r\n    HttpClientModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \"<div *ngIf=\\\"artist\\\">\\n  <h2>{{ artist.name | uppercase }} Details</h2>\\n  <div><span>id: </span>{{artist.id}}</div>\\n  <div>\\n    <label>{{ localization.trans('entity.name') }}:\\n      <input [(ngModel)]=\\\"artist.name\\\" placeholder=\\\"name\\\"/>\\n    </label>\\n  </div>\\n</div>\"","module.exports = \"\"","import { Component, OnInit, Input } from '@angular/core';\nimport { Artist } from '../artist';\nimport { LocalizationService } from '../localization.service';\n\n@Component({\n  selector: 'app-artist-detail',\n  templateUrl: './artist-detail.component.html',\n  styleUrls: ['./artist-detail.component.scss']\n})\nexport class ArtistDetailComponent implements OnInit {\n\n  @Input() artist: Artist;\n\n  constructor(private localization: LocalizationService) { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { EntityService } from './entity.service';\nimport { Observable } from 'rxjs';\nimport { Artist } from './artist';\nimport { ConfigService } from './config.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ArtistService {\n\n  constructor(\n  \tprivate configService: ConfigService, \n  \tprivate entityService: EntityService\n  ) { }\n\n  getArtists(): Observable<Artist[]> {\n  \treturn this.entityService.getEntities('artists');\n  }\n}\n","import { Entity } from './entity';\r\n\r\nexport class Artist extends Entity { }","module.exports = \"<h2>{{ localization.trans('title.artists')}}</h2>\\r\\n<div class=\\\"row grid header\\\">\\r\\n\\t<div class=\\\"col-6\\\">\\r\\n\\t  {{ localization.trans('grid.name') }}\\r\\n\\t</div>\\r\\n\\t<div class=\\\"col-4\\\">\\r\\n\\t</div>  \\r\\n\\t<div class=\\\"col-2\\\"></div>\\t\\r\\n</div>\\r\\n<div class=\\\"row grid\\\" *ngFor=\\\"let artist of artists\\\" (click)=\\\"onSelect(artist)\\\" [class.selected]=\\\"artist === selectedArtist\\\">\\r\\n\\t<div class=\\\"col-6\\\">\\r\\n\\t  {{ artist.name }}\\r\\n\\t</div>\\r\\n\\t<div class=\\\"col-4\\\">\\r\\n\\t  {{ artist.prova }}\\r\\n\\t</div>\\r\\n\\t<div class=\\\"col-2\\\">\\r\\n\\t\\t<i class=\\\"fas fa-trash\\\"></i>\\r\\n\\t</div>\\r\\n</div>\\r\\n<app-artist-detail [artist]=\\\"selectedArtist\\\"></app-artist-detail>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\r\nimport { ArtistService } from '../artist.service';\r\nimport { Artist } from '../artist';\r\n\r\nimport { ConfigService } from '../config.service';\r\nimport { LocalizationService } from '../localization.service';\r\n\r\n@Component({\r\n  selector: 'app-artists',\r\n  templateUrl: './artists.component.html',\r\n  styleUrls: ['./artists.component.scss']\r\n})\r\nexport class ArtistsComponent implements OnInit {\r\n\r\n  \tartists: Artist[];\r\n\r\n  \tselectedArtist: Artist;\r\n\r\n  \tconstructor(\r\n                private configService: ConfigService, \r\n                private localization: LocalizationService,\r\n                private artistService: ArtistService\r\n    ) { \r\n      console.log(configService.getParam('env'));\r\n  \t}\r\n\r\n  \tngOnInit() {\r\n      // console.log(jQuery);\r\n      this.getArtists();\r\n  \t}\r\n\r\n  \tonSelect(artist: Artist): void {\r\n  \t\tthis.selectedArtist = artist;\r\n\t  }\r\n\r\n    getArtists(): void {\r\n      this.artistService.getArtists().subscribe(artists => this.artists = artists);\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { environment } from '../environments/environment';\n\nimport { config } from './config';\n //+ (environment.production ? '.prod' : '');\n\nfunction _window(): any {\n  // return the native window obj\n  return window;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConfigService {\n\n  constructor() { }\n\n  get nativeWindow(): any {\n    return _window();\n  }\n\n  get translator(): any {\n    return _window().Translator;\n  }\n\n  getParam(paramName: string): string {\n    return (config.hasOwnProperty(paramName) ? config[paramName] : _window()._app[paramName]);\n  }\n}","export const config = {\r\n\tenv: 'dev'\r\n}","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Entity } from './entity';\nimport { Observable, of } from 'rxjs';\nimport { catchError, map, tap } from 'rxjs/operators';\nimport { ConfigService } from './config.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EntityService {\n\n  constructor(\n  \tprivate http: HttpClient,\n  \tprivate configService: ConfigService\n  \t) { }\n\n  getEntities(what: string): Observable<Entity[]> {\n  \t// return of(ARTISTS).pipe(tap(data => console.log(data));\n  \tconst url = this.configService.getParam('listUrl').replace(/__what__/, what);\n  \t// this.http.get(), senza specificare il tipo restituito, restituisce un Observable<Objec>\n  \treturn this.http.get(url, { \n      withCredentials: true, \n      observe: 'response'\n    }).pipe(\n  \t\ttap(data => {}),\n  \t\tmap((res) => {\n            // Converto la response che è un'object di stringhe json, in un'array di oggetti.\n            // res è un oggetto non un array in senso stretto.\n            let data = []; \n            let resultset = res.body;\n            for (let i in resultset) {\n            \tdata[i] = <Entity> JSON.parse(resultset[i]);\n            }\n            \n        \treturn data;\n        }),\n  \t\tcatchError(this.handleError('getEntities', []))\n  \t);\n  }\n\n  private handleError<T>(operation: string = 'operation', result?: T) {\n  \t\treturn (error: any): Observable<T> => {\n  \t\t\tconsole.error(error);\n  \t\t\treturn of(result as T);\n  \t\t}\n  }\n}\n","export class Entity {\r\n\tid: number;\r\n}","import { Injectable } from '@angular/core';\n\nfunction _window(): any {\n  // return the native window obj\n  return window;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LocalizationService {\n\n  constructor() { }\n\n  trans(headword: string): string {\n    return _window().Translator.trans(headword);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * In development mode, to ignore zone related error stack frames such as\r\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\r\n * import the following file, but please comment it out in production mode\r\n * because it will have performance impact when throw error\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nimport * as jquery from 'jquery';\r\nwindow['jQuery'] = window['$'] = jquery;\r\n\r\nimport * as popper from 'popper.js';\r\nwindow['Popper'] = popper;\r\n\r\nimport Translator from 'bazinga-translator';\r\n\r\nimport fontawesome from '@fortawesome/fontawesome'\r\nimport solid from '@fortawesome/fontawesome-free-solid'\r\n\r\n// Add the icon to the library so you can use it in your page\r\nfontawesome.library.add(solid.faPencilAlt);\r\nfontawesome.library.add(solid.faTrash);\r\nfontawesome.library.add(solid.faHeadphones);\r\nfontawesome.library.add(solid.faPlay);\r\n\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));"],"sourceRoot":""}