{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/localization.service.ts","webpack:///./src/app/mock-songs.ts","webpack:///./src/app/song-detail/song-detail.component.html","webpack:///./src/app/song-detail/song-detail.component.scss","webpack:///./src/app/song-detail/song-detail.component.ts","webpack:///./src/app/song.service.ts","webpack:///./src/app/song.ts","webpack:///./src/app/songs/songs.component.html","webpack:///./src/app/songs/songs.component.scss","webpack:///./src/app/songs/songs.component.ts","webpack:///./src/app/window.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { SongsComponent } from './songs/songs.component';\r\n// import { ArtistsComponent } from './artists/artists.component';\r\n\r\nconst routes: Routes = [\r\n  { path: ':lang/songs', component: SongsComponent }\r\n  // , { path: ':lang/artists', component: ArtistsComponent }\r\n];\r\n\r\n@NgModule({\r\n  imports: [ RouterModule.forRoot(routes) ],\r\n  exports: [ RouterModule ]\r\n})\r\nexport class AppRoutingModule { }\r\n","module.exports = \"<div class=\\\"container\\\">\\r\\n<router-outlet></router-outlet>\\r\\n</div>\"","module.exports = \"\"","import { Component } from '@angular/core';\r\nimport { WindowService } from './window.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  \ttitle = 'app';\r\n\r\n    constructor(private windowService: WindowService) { \r\n  \t}\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms'; \r\n\r\nimport { AppComponent } from './app.component';\r\nimport { SongsComponent } from './songs/songs.component';\r\nimport { SongDetailComponent } from './song-detail/song-detail.component';\r\nimport { AppRoutingModule } from './/app-routing.module';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    SongsComponent,\r\n    SongDetailComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    FormsModule,\r\n    AppRoutingModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Injectable } from '@angular/core';\n\nfunction _window(): any {\n  // return the native window obj\n  return window;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LocalizationService {\n\n  constructor() { }\n\n  trans(headword: string): string {\n    return _window().Translator.trans(headword);\n  }\n}\n","import { Song } from './song';\r\n\r\nexport const SONGS: Song[] = [\r\n\t{id: 12, name: 'Yellow ledbetter'},\r\n\t{id: 146, name: 'Blackbird'}\r\n];","module.exports = \"<div *ngIf=\\\"song\\\">\\n  <h2>{{ song.name | uppercase }} Details</h2>\\n  <div><span>id: </span>{{song.id}}</div>\\n  <div>\\n    <label>name:\\n      <input [(ngModel)]=\\\"song.name\\\" placeholder=\\\"name\\\">\\n    </label>\\n  </div>\\n</div>\"","module.exports = \"\"","import { Component, OnInit, Input } from '@angular/core';\nimport { Song } from '../song';\nimport { WindowService } from '../window.service';\n\n@Component({\n  selector: 'app-song-detail',\n  templateUrl: './song-detail.component.html',\n  styleUrls: ['./song-detail.component.scss']\n})\nexport class SongDetailComponent implements OnInit {\n\n  @Input() song: Song;\n  \n  constructor(private windowService: WindowService) {\n  }\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Song } from './song';\nimport { SONGS } from './mock-songs';\nimport { Observable, of } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SongService {\n\n  constructor() { }\n\n  getSongs(): Observable<Song[]> {\n  \t\treturn of(SONGS);\n  }\n}\n","export class Song {\r\n  id: number;\r\n  name: string;\r\n}","module.exports = \"<h2>{{ localization.trans('title.songs')}}</h2>\\r\\n<div class=\\\"row grid header\\\">\\r\\n\\t<div class=\\\"col-6\\\">\\r\\n\\t  {{ localization.trans('grid.name') }}\\r\\n\\t</div>\\r\\n\\t<div class=\\\"col-4\\\">\\r\\n\\t</div>  \\r\\n\\t<div class=\\\"col-2\\\"></div>\\t\\r\\n</div>\\r\\n<div class=\\\"row grid\\\" *ngFor=\\\"let song of songs\\\" (click)=\\\"onSelect(song)\\\" [class.selected]=\\\"song === selectedSong\\\">\\r\\n\\t<div class=\\\"col-6\\\">\\r\\n\\t  {{ song.name }}\\r\\n\\t</div>\\r\\n\\t<div class=\\\"col-4\\\">\\r\\n\\t</div>\\r\\n\\t<div class=\\\"col-2\\\">\\r\\n\\t\\t<i class=\\\"fas fa-trash\\\"></i>\\r\\n\\t</div>\\r\\n</div>\\r\\n<app-song-detail [song]=\\\"selectedSong\\\"></app-song-detail>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\r\nimport { SongService } from '../song.service';\r\nimport { Song } from '../song';\r\n\r\nimport { WindowService } from '../window.service';\r\nimport { LocalizationService } from '../localization.service';\r\n\r\n@Component({\r\n  selector: 'app-songs',\r\n  templateUrl: './songs.component.html',\r\n  styleUrls: ['./songs.component.scss']\r\n})\r\nexport class SongsComponent implements OnInit {\r\n\r\n  \tsongs: Song[];\r\n\r\n  \tselectedSong: Song;\r\n\r\n  \tconstructor(\r\n                private windowService: WindowService, \r\n                private localization: LocalizationService,\r\n                private songService: SongService\r\n    ) { \r\n      console.log(windowService.nativeWindow._app.saveUrl);\r\n  \t}\r\n\r\n  \tngOnInit() {\r\n      // console.log(jQuery);\r\n      this.getSongs();\r\n  \t}\r\n\r\n  \tonSelect(song: Song): void {\r\n  \t\tthis.selectedSong = song;\r\n\t  }\r\n\r\n    getSongs(): void {\r\n      this.songService.getSongs().subscribe(songs => this.songs = songs);\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\n\nfunction _window(): any {\n  // return the native window obj\n  return window;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WindowService {\n\n  constructor() { }\n\n  get nativeWindow(): any {\n    return _window();\n  }\n\n   get translator(): any {\n    return _window().Translator;\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * In development mode, to ignore zone related error stack frames such as\r\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\r\n * import the following file, but please comment it out in production mode\r\n * because it will have performance impact when throw error\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nimport * as jquery from 'jquery';\r\nwindow['jQuery'] = window['$'] = jquery;\r\n\r\nimport * as popper from 'popper.js';\r\nwindow['Popper'] = popper;\r\n\r\nimport Translator from 'bazinga-translator';\r\n\r\nimport fontawesome from '@fortawesome/fontawesome'\r\nimport solid from '@fortawesome/fontawesome-free-solid'\r\n\r\n// Add the icon to the library so you can use it in your page\r\nfontawesome.library.add(solid.faPencilAlt);\r\nfontawesome.library.add(solid.faTrash);\r\nfontawesome.library.add(solid.faHeadphones);\r\nfontawesome.library.add(solid.faPlay);\r\n\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));"],"sourceRoot":""}